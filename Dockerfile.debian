FROM python:3.7.7-buster as base

ENV LANG C.UTF-8

# IFDEF PROXY
#! RUN echo 'Acquire::http { Proxy "http://${PROXY}"; };' >> /etc/apt/apt.conf.d/01proxy
# ENDIF

RUN apt-get update && \
    apt-get install --yes --no-install-recommends \
        build-essential \
        python3 python3-dev python3-pip python3-setuptools python3-venv \
        swig portaudio19-dev libatlas-base-dev \
        fakeroot curl rsync

# -----------------------------------------------------------------------------

FROM base as base-amd64

FROM base as base-armv7

FROM base as base-arm64

FROM balenalib/raspberry-pi-debian-python:3.7-buster-build-20200529 as base-armv6

ENV LANG C.UTF-8

# IFDEF PROXY
#! RUN echo 'Acquire::http { Proxy "http://${PROXY}"; };' >> /etc/apt/apt.conf.d/01proxy
# ENDIF

RUN install_packages \
        swig portaudio19-dev libatlas-base-dev \
        fakeroot curl rsync

# -----------------------------------------------------------------------------

ARG TARGETARCH
ARG TARGETVARIANT
FROM base-$TARGETARCH$TARGETVARIANT as build

# Directory of prebuilt tools
ENV DOWNLOAD_DIR=/download
COPY download/ ${DOWNLOAD_DIR}/

ENV APP_DIR=/usr/lib/rhasspy

COPY VERSION ${APP_DIR}/

# Copy Rhasspy source
COPY rhasspy/ ${APP_DIR}/rhasspy/
COPY rhasspy-server-hermes/ ${APP_DIR}/rhasspy-server-hermes/
COPY rhasspy-wake-snowboy-hermes/ ${APP_DIR}/rhasspy-wake-snowboy-hermes/
COPY rhasspy-wake-porcupine-hermes/ ${APP_DIR}/rhasspy-wake-porcupine-hermes/
COPY rhasspy-wake-precise-hermes/ ${APP_DIR}/rhasspy-wake-precise-hermes/
COPY rhasspy-profile/ ${APP_DIR}/rhasspy-profile/
COPY rhasspy-asr/ ${APP_DIR}/rhasspy-asr/
COPY rhasspy-asr-deepspeech ${APP_DIR}/rhasspy-asr-deepspeech/
COPY rhasspy-asr-deepspeech-hermes/ ${APP_DIR}/rhasspy-asr-deepspeech-hermes/
COPY rhasspy-asr-pocketsphinx/ ${APP_DIR}/rhasspy-asr-pocketsphinx/
COPY rhasspy-asr-pocketsphinx-hermes/ ${APP_DIR}/rhasspy-asr-pocketsphinx-hermes/
COPY rhasspy-asr-kaldi/ ${APP_DIR}/rhasspy-asr-kaldi/
COPY rhasspy-asr-kaldi-hermes/ ${APP_DIR}/rhasspy-asr-kaldi-hermes/
COPY rhasspy-dialogue-hermes/ ${APP_DIR}/rhasspy-dialogue-hermes/
COPY rhasspy-fuzzywuzzy/ ${APP_DIR}/rhasspy-fuzzywuzzy/
COPY rhasspy-fuzzywuzzy-hermes/ ${APP_DIR}/rhasspy-fuzzywuzzy-hermes/
COPY rhasspy-hermes/ ${APP_DIR}/rhasspy-hermes/
COPY rhasspy-homeassistant-hermes/ ${APP_DIR}/rhasspy-homeassistant-hermes/
COPY rhasspy-microphone-cli-hermes/ ${APP_DIR}/rhasspy-microphone-cli-hermes/
COPY rhasspy-microphone-pyaudio-hermes/ ${APP_DIR}/rhasspy-microphone-pyaudio-hermes/
COPY rhasspy-nlu/ ${APP_DIR}/rhasspy-nlu/
COPY rhasspy-nlu-hermes/ ${APP_DIR}/rhasspy-nlu-hermes/
COPY rhasspy-rasa-nlu-hermes/ ${APP_DIR}/rhasspy-rasa-nlu-hermes/
COPY rhasspy-remote-http-hermes/ ${APP_DIR}/rhasspy-remote-http-hermes/
COPY rhasspy-silence/ ${APP_DIR}/rhasspy-silence/
COPY rhasspy-speakers-cli-hermes/ ${APP_DIR}/rhasspy-speakers-cli-hermes/
COPY rhasspy-supervisor/ ${APP_DIR}/rhasspy-supervisor/
COPY rhasspy-tts-cli-hermes/ ${APP_DIR}/rhasspy-tts-cli-hermes/
COPY rhasspy-tts-wavenet-hermes/ ${APP_DIR}/rhasspy-wavenet-cli-hermes/
COPY rhasspy-wake-pocketsphinx-hermes/ ${APP_DIR}/rhasspy-wake-pocketsphinx-hermes/
COPY rhasspy-wake-raven/ ${APP_DIR}/rhasspy-wake-raven/
COPY rhasspy-wake-raven-hermes/ ${APP_DIR}/rhasspy-wake-raven-hermes/
COPY rhasspy-tts-larynx-hermes/ ${APP_DIR}/rhasspy-tts-larynx-hermes/

# Autoconf
COPY m4/ ${APP_DIR}/m4/
COPY configure config.sub config.guess \
     install-sh missing aclocal.m4 \
     RHASSPY_DIRS Makefile.in setup.py.in rhasspy.sh.in rhasspy.spec.in \
     ${APP_DIR}/

RUN cd ${APP_DIR} && \
    ./configure --enable-in-place

COPY scripts/install/ ${APP_DIR}/scripts/install/

COPY etc/shflags ${APP_DIR}/etc/
COPY etc/wav/ ${APP_DIR}/etc/wav/

COPY README.md LICENSE ${APP_DIR}/

# IFDEF PYPI
#! ENV PIP_INDEX_URL=http://${PYPI}/simple/
#! ENV PIP_TRUSTED_HOST=${PYPI_HOST}
# ENDIF

RUN cd ${APP_DIR} && \
    export PIP_INSTALL_ARGS="-f ${DOWNLOAD_DIR}" \
    export PIP_PREINSTALL_PACKAGES='numpy==1.19.0 grpcio==1.30.0 scipy==1.5.1' && \
    export POCKETSPHINX_FROM_SRC=no && \
    export VIRTUALENV_FLAGS='--copies' && \
    make && \
    make install

ENV DEBIAN_DIR=/debian
ENV DEBIAN_RHASSPY_DIR=${DEBIAN_DIR}/rhasspy/usr/lib/rhasspy

RUN mkdir -p ${DEBIAN_DIR}/rhasspy/usr/bin ${DEBIAN_DIR}/rhasspy/usr/lib && \
    rsync -av ${APP_DIR} ${DEBIAN_DIR}/rhasspy/usr/lib/

RUN mkdir -p ${DEBIAN_DIR}/rhasspy/usr/lib/rhasspy/bin
COPY bin/rhasspy-voltron bin/voltron-run ${DEBIAN_DIR}/rhasspy/usr/lib/rhasspy/bin/
COPY debian/rhasspy ${DEBIAN_DIR}/rhasspy/usr/bin/

# Clean up
RUN cd ${DEBIAN_DIR}/rhasspy/usr/lib/rhasspy && \
    find . -depth -type d -name '.git' -exec rm -rf {} \\; && \
    find . -depth -type d -name '__pycache__' -exec rm -rf {} \\; && \
    find . -type f -name 'g2p.fst.gz' -exec gunzip {} \\;

# Add libpython3.7
RUN cp /usr/local/lib/libpython3.7m.so* \
       ${DEBIAN_DIR}/rhasspy/usr/lib/rhasspy/.venv/lib/

COPY debian/control.in /
RUN export DEBIAN_ARCH="$(dpkg-architecture | grep DEB_BUILD_ARCH= | sed -e 's/[^=]\\+=//')" && \
    export VERSION="$(cat ${APP_DIR}/VERSION)" && \
    mkdir -p ${DEBIAN_DIR}/rhasspy/DEBIAN && \
    sed -e s"/@VERSION@/${VERSION}/" -e "s/@DEBIAN_ARCH@/${DEBIAN_ARCH}/" < /control.in > ${DEBIAN_DIR}/rhasspy/DEBIAN/control

RUN cd ${DEBIAN_DIR} && \
    fakeroot dpkg --build rhasspy

RUN cd ${DEBIAN_DIR} && \
    dpkg-name *.deb

# -----------------------------------------------------------------------------

FROM scratch

COPY --from=build /debian/*.deb /